theme_ipsum()
library(hrbrthemes)
ggplot(idiomas_usados, aes(x = Var1, y = Var2, fill = Freq)) +
scale_fill_gradient(low="white", high="blue") +
theme_ipsum()
ggplot(idiomas_usados, aes(x = Var1, y = Var2, fill = Freq)) +
scale_fill_gradient(low="white", high="blue")
ggplot(idiomas_usados, aes(x = Var1, y = Var2, fill = Freq)) +
scale_fill_gradient(low="white", high="blue")
ggplot(idiomas_usados, aes(x = Var1, y = Var2, fill = Freq)) +
scale_fill_distiller(palette = "RdPu") +
theme_ipsum()
p <- ggplot(idiomas_usados, aes(x = Var1, y = Var2, fill = Freq)) +
geom_tile() +
theme_ipsum()
ggplotly(p, tooltip="text")
library(plotly)
ggplotly(p, tooltip="text")
p <- ggplot(idiomas_usados, aes(x = Var1, y = Var2, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low="white", high="blue") +
theme_ipsum()
ggplotly(p, tooltip="text")
p <- ggplot(idiomas_usados, aes(x = Var1, y = Var2, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low="green", high="red") +
theme_ipsum()
ggplotly(p, tooltip="text")
p <- ggplot(idiomas_usados, aes(x = Var1, y = Var2, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low="yellow", high="red") +
theme_ipsum()
ggplotly(p, tooltip="text")
p
knitr::opts_chunk$set(echo = TRUE)
#librerías
# stringr y stringi: para arreglar caracteres con acento
#lubridate: para corregir problemas de fechas
#ggplot y plotly: para graficar
#dplyr, tidytext y tidyverse: manejo de fechas y datos
#rgdal, leaflet, htmlwidgets y htmltools: para mapas
#htmlwidgets, htmltools para usar elementos html
#wordcloud para nube de palabras
#DT para impresión de tablas
#hrbrthemes para paleta de colores
paquetes<-c("stringr","stringi", "lubridate", "ggplot2", "dplyr", "plotly", "rgdal", "leaflet", "htmlwidgets", "htmltools", "tidytext", "tidyverse", "wordcloud", "DT","hrbrthemes")
for(i in paquetes){
if(!require(i, character.only = TRUE)){
install.packages(i, dependencies=TRUE)
}
require(i, character.only = TRUE)
}
#analizo los idiomas que circulan por continente. Me detengo en aquellos que circulan por muchos continentes distintos
idiomas_x_continente <- as.data.frame(table(base$Continent_Name1, base$Language.of.your.fact.check))
cant_idiomas_distintos <- as.data.frame(table(idiomas_x_continente$Var2[idiomas_x_continente$Freq>0]))
colnames(cant_idiomas_distintos) <- c("Idioma", "Cant_Continentes")
idiomas <- cant_idiomas_distintos$Var1[cant_idiomas_distintos$Freq > 2]
#DT::datatable(cant_idiomas_distintos[cant_idiomas_distintos$Freq > 2,])
idiomas_usados <- subset(idiomas_x_continente, Var2 %in% idiomas)
ggplot(idiomas_usados, aes(x = Var1, y = Var2, fill = Freq)) +
geom_tile()
ggplot(idiomas_usados, aes(x = Var1, y = Var2, fill = Freq)) +
geom_tile()
idiomas_usados
str(cant_idiomas_distintos)
#analizo los idiomas que circulan por continente. Me detengo en aquellos que circulan por muchos continentes distintos
idiomas_x_continente <- as.data.frame(table(base$Continent_Name1, base$Language.of.your.fact.check))
cant_idiomas_distintos <- as.data.frame(table(idiomas_x_continente$Var2[idiomas_x_continente$Freq>0]))
colnames(cant_idiomas_distintos) <- c("Idioma", "Cant_Continentes")
idiomas <- cant_idiomas_distintos$Idioma[cant_idiomas_distintos$Cant_Continentes > 2]
#DT::datatable(cant_idiomas_distintos[cant_idiomas_distintos$Freq > 2,])
idiomas_usados <- subset(idiomas_x_continente, Var2 %in% idiomas)
ggplot(idiomas_usados, aes(x = Var1, y = Var2, fill = Freq)) +
geom_tile()
idiomas_usados
head(idiomas_usados)
idiomas_x_continente <- as.data.frame(table(base$Continent_Name1, base$Language.of.your.fact.check))
cant_idiomas_distintos <- as.data.frame(table(idiomas_x_continente$Var2[idiomas_x_continente$Freq>0]))
colnames(cant_idiomas_distintos) <- c("Idioma", "Cant_Continentes")
idiomas <- cant_idiomas_distintos$Idioma[cant_idiomas_distintos$Cant_Continentes > 2]
#DT::datatable(cant_idiomas_distintos[cant_idiomas_distintos$Freq > 2,])
idiomas_usados <- subset(idiomas_x_continente, Var2 %in% idiomas)
p <- ggplot(idiomas_usados, aes(x = Var1, y = Var2, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low="yellow", high="red") +
theme_ipsum()
ggplotly(p, tooltip="text")
p
ggplot(idiomas_usados, aes(x = Var1, y = Var2, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low="yellow", high="red") +
theme_ipsum() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank())
ggplot(idiomas_usados, aes(x = Continente, y = Idioma, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low="yellow", high="red") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme_ipsum()
idiomas_usados <- subset(idiomas_x_continente, Var2 %in% idiomas)
colnames(idiomas_usados) <- c("Continente", "Idioma", "Freq")
ggplot(idiomas_usados, aes(x = Continente, y = Idioma, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low="yellow", high="red") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme_ipsum()
idiomas_usados <- subset(idiomas_x_continente, Var2 %in% idiomas)
colnames(idiomas_usados) <- c("Continente", "Idioma", "Freq")
ggplot(idiomas_usados, aes(x = Continente, y = Idioma, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low="yellow", high="red") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(idiomas_usados, aes(x = Continente, y = Idioma, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low="yellow", high="red") +
theme_ipsum(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
table(base$Who.said.posted.it.)
View(base)
grep("Facebook", base$Who.said.posted.it.)
table(grep("Facebook", base$Who.said.posted.it.))
table(grep("Facebook", base$Who.said.posted.it.))[2]
table(grep("Facebook", base$Who.said.posted.it.))[[2]]
as.data.frame(table(grep("Facebook", base$Who.said.posted.it.)))
aaa <- as.data.frame(table(grep("Facebook", base$Who.said.posted.it.)))
head(aaa)
nrow(aaa)
nrow(base)
aaa <- as.data.frame(table(grep("Twitter", base$Who.said.posted.it.)))
View(aaa)
nrow(aaa)
aa <- as.data.frame(table(base$Who.said.posted.it.))
View(aa)
base$Who.said.posted.it. <- toupper(base$Who.said.posted.it.)
aa <- as.data.frame(table(base$Who.said.posted.it.))
library(stringr)
getCount <- function(data,keyword)
{
wcount <- str_count(dataset$text, keyword)
return(data.frame(data,wcount))
}
getCount(base$Who.said.posted.it.,'FACEBOOK')
getCount <- function(campo,keyword)
{
wcount <- str_count(campo, keyword)
return(data.frame(data,wcount))
}
getCount(base$Who.said.posted.it.,'FACEBOOK')
wcount <- str_count(base$Who.said.posted.it, keyword)
wcount <- str_count(base$Who.said.posted.it, 'FACEBOOK')
data.frame(data,wcount)
data.frame(base$Who.said.posted.it,wcount)
conteo <- data.frame(base$Who.said.posted.it,wcount))
conteo <- data.frame(base$Who.said.posted.it,wcount)
sum(wcount)
sum(wcount, na.rm = TRUE)
aaa <- as.data.frame(table(grep("Facebook", base$Who.said.posted.it.)))
str(aaa)
sum(aaa$Freq)
aaa <- as.data.frame(table(grep("Facebook", base$Who.said.posted.it.)))
aaa <- as.data.frame(table(grep("FACEBOOK", base$Who.said.posted.it.)))
sum(aaa$Freq)
wcount
sum(wcount)
sum(wcount, na.rm = TRUE)
count_fb <- sum(str_count(base$Who.said.posted.it, 'FACEBOOK')) + sum(str_count(base$Who.said.posted.it, 'FB'))
count_fb
count_fb <- sum(str_count(base$Who.said.posted.it, 'FACEBOOK'), na.rm = TRUE) + sum(str_count(base$Who.said.posted.it, 'FB'), na.rm = TRUE)
count_fb
count_fb <- sum(str_count(base$Who.said.posted.it, 'FACEBOOK'), na.rm = TRUE) + sum(str_count(base$Who.said.posted.it, 'FB'), na.rm = TRUE)
count_tw <- sum(str_count(base$Who.said.posted.it, 'TWITTER'), na.rm = TRUE)
count_inst <- sum(str_count(base$Who.said.posted.it, 'INSTAGRAM'), na.rm = TRUE)
count_wa <- sum(str_count(base$Who.said.posted.it, 'WHATSAPP'), na.rm = TRUE)
count_tg <- sum(str_count(base$Who.said.posted.it, 'TELEGRAM'), na.rm = TRUE)
count_fb
count_tw
count_inst
count_wa
count_tg
View(aaa)
View(aa)
count_sm <- sum(str_count(base$Who.said.posted.it, 'SOCIAL MEDIA'), na.rm = TRUE)
count_ws <- sum(str_count(base$Who.said.posted.it, 'SITE'), na.rm = TRUE)
count_yt <- sum(str_count(base$Who.said.posted.it, 'YOUTUBE'), na.rm = TRUE)
count_sm
count_ws
count_yt
dupli <- as.data.frame(table(base$What.did.you.fact.check.))
View(dupli)
#leo la base de datos
base <- read.csv("Base de datos.csv", sep= ",")
base[base$What.did.you.fact.check. == "Sweden refused to fight the coronavirus.",]
#hay valores en blanco en lugar de NA. Arreglo eso
base[base==""]<-NA
nulos <- as.data.frame(apply(is.na(base),2,sum))
colnames(nulos) <- c("Cant_Valores_Nulos")
#corrección del tipo de datos
#cambio el formato de fecha de texto a date
base$When.did.you.see.the.claim. <- as.Date(base$When.did.you.see.the.claim., format="%m/%d/%Y")
#cambio formato de pais a factor
base$Country.1 <- as.factor(base$Country.1)
base$Country.2 <- as.factor(base$Country.2)
base$Country.3 <- as.factor(base$Country.3)
base$Country.4 <- as.factor(base$Country.4)
#cambio organizacion a factor
base$Organization <- as.factor(base$Organization)
#cambio quien posteo a factor
base$Who.said.posted.it. <- as.factor(base$Who.said.posted.it.)
#cambio lenguaje a factor
base$Language.of.your.fact.check <- as.factor(base$Language.of.your.fact.check)
#cambio rating factor
base$Final.rating <- as.factor(base$Final.rating)
#cambio categoría a factor
base$Category <- as.factor(base$Category)
#corrijo paises mal escritos en la base
base$Country.1[base$Country.1 == "UK"] <- "United Kingdom"
base$Country.1[base$Country.1 == "India "] <- "India"
base$Country.1[base$Country.1 == "DR Congo"] <- "Congo"
levels(base$Country.2) <- as.factor(c(levels(base$Country.2), "Congo"))
base$Country.2[base$Country.2 == "DR Congo"] <- "Congo"
base$Country.2[base$Country.2 == "USA"] <- "United States"
base$Country.2[base$Country.2 == "Spain "] <- "Spain"
base$Country.2[base$Country.2 == "Serbia "] <- "Serbia"
base$Country.2[base$Country.2 == "Croatia "] <- "Croatia"
base$Country.2[base$Country.2 == "Northern Ireland"] <- "United Kingdom"
levels(base$Country.2) <- as.factor(c(levels(base$Country.2), "Papua New Guinea"))
base$Country.2[base$Country.2 == "Papua-New-Guinea"] <- "Papua New Guinea"
levels(base$Country.3) <- as.factor(c(levels(base$Country.3), "Congo"))
base$Country.3[base$Country.3 == "DR Congo"] <- "Congo"
base$Country.3[base$Country.3 == "Serbia "] <- "Serbia"
base$Country.3[base$Country.3 == "Venezuela "] <- "Venezuela"
levels(base$Country.4) <- as.factor(c(levels(base$Country.4), "Congo"))
base$Country.4[base$Country.4 == "DR Congo"] <- "Congo"
nrow(base[base$What.did.you.fact.check. == "Sweden refused to fight the coronavirus.",])
#creo cuatro variables continente, 1 por pais
base <- dplyr::left_join(base, paises, by=c("Country.1" = "nombre_corto"), keep= FALSE, suffix=c("1","2"))
nrow(base[base$What.did.you.fact.check. == "Sweden refused to fight the coronavirus.",])
base[base$What.did.you.fact.check. == "Sweden refused to fight the coronavirus.",]
View(paises)
table(paises$nombre_corto)
bb <- as.data.frame(table(paises$nombre_corto))
View(bb)
unique(paises)
View(unique(paises))
data.frame(2,2,4,4)
data.frame(2,2,4,4, nrow=2, ncol=2)
emp.data <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11",
"2015-03-27")),
stringsAsFactors = FALSE
)
emp.data
emp.data[-emp.data$emp_name == "Rick",]
emp.data[emp.data$emp_name != "Rick",]
emp.data <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Rick","Michelle","Ryan","Gary"),
salary = c(600.0,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11",
"2015-03-27")),
stringsAsFactors = FALSE
)
emp.data
emp.data[emp.data$emp_name != "Rick",]
emp.data[emp.data$emp_name != "Rick" & emp.data$salary != "600.00",]
emp.data[emp.data$emp_name != "Rick" & emp.data$salary != 600.00,]
emp.data[emp.data$emp_name == "Rick" & emp.data$salary == 600.00,]
emp.data[!(emp.data$emp_name == "Rick" & emp.data$salary == 600.00),]
paises <- unique(paises)
paises <- paises[!(paises$Continent_Name == "Asia" & paises$nombre_corto == "Armenia"),]
paises <- paises[!(paises$Continent_Name == "Europe" & paises$nombre_corto == "Azerbaijan"),]
paises <- paises[!(paises$Continent_Name == "Asia" & paises$nombre_corto == "Cyprus"),]
paises <- paises[!(paises$Continent_Name == "Asia" & paises$nombre_corto == "Georgia"),]
paises <- paises[!(paises$Continent_Name == "Europe" & paises$nombre_corto == "Kasakhstan"),]
paises <- paises[!(paises$Continent_Name == "Asia" & paises$nombre_corto == "Russia"),]
paises <- paises[!(paises$Continent_Name == "Asia" & paises$nombre_corto == "Turkey"),]
#creo cuatro variables continente, 1 por pais
base <- dplyr::left_join(base, paises, by=c("Country.1" = "nombre_corto"), keep= FALSE, suffix=c("1","2"))
base <- dplyr::left_join(base, paises, by=c("Country.2" = "nombre_corto"), keep= FALSE, suffix=c("1","2"))
base <- dplyr::left_join(base, paises, by=c("Country.3" = "nombre_corto"), keep= FALSE, suffix=c("3","4"))
base <- dplyr::left_join(base, paises, by=c("Country.4" = "nombre_corto"), keep= FALSE, suffix=c("3","4"))
nrow(base[base$What.did.you.fact.check. == "Sweden refused to fight the coronavirus.",])
table(paises$nombre_corto)
View(as.data.frame(table(paises$nombre_corto)))
#leo la base de datos
base <- read.csv("Base de datos.csv", sep= ",")
#hay valores en blanco en lugar de NA. Arreglo eso
base[base==""]<-NA
base$When.did.you.see.the.claim. <- as.Date(base$When.did.you.see.the.claim., format="%m/%d/%Y")
#cambio formato de pais a factor
base$Country.1 <- as.factor(base$Country.1)
base$Country.2 <- as.factor(base$Country.2)
base$Country.3 <- as.factor(base$Country.3)
base$Country.4 <- as.factor(base$Country.4)
#cambio organizacion a factor
base$Organization <- as.factor(base$Organization)
#cambio quien posteo a factor
base$Who.said.posted.it. <- as.factor(base$Who.said.posted.it.)
#cambio lenguaje a factor
base$Language.of.your.fact.check <- as.factor(base$Language.of.your.fact.check)
#cambio rating factor
base$Final.rating <- as.factor(base$Final.rating)
#cambio categoría a factor
base$Category <- as.factor(base$Category)
#importo base de paises para extraer continente
paises <- read.csv("https://pkgstore.datahub.io/JohnSnowLabs/country-and-continent-codes-list/country-and-continent-codes-list-csv_csv/data/b7876b7f496677669644f3d1069d3121/country-and-continent-codes-list-csv_csv.csv", sep = "," )
paises$nombre_corto <- stringr::str_split_fixed(paises$Country_Name,",",2)[,1]
paises <- paises[,c("Continent_Name", "nombre_corto")]
#corrijo algunos paises en el df de paises
paises$nombre_corto[paises$nombre_corto == "United Kingdom of Great Britain & Northern Ireland"] <- "United Kingdom"
paises$nombre_corto[paises$nombre_corto == "United States of America"] <- "United States"
paises[nrow(paises)+1, ] = c("Europe", "North Macedonia")
paises$nombre_corto[paises$nombre_corto == "Cote d'Ivoire"] <- "Ivory Coast"
paises$nombre_corto[paises$nombre_corto == "Russian Federation"] <- "Russia"
paises$nombre_corto[paises$nombre_corto == "Syrian Arab Republic"] <- "Syria"
paises$nombre_corto[paises$nombre_corto == "Slovakia (Slovak Republic)"] <- "Slovakia"
paises$nombre_corto[paises$nombre_corto == "Libyan Arab Jamahiriya"] <- "Libya"
paises$nombre_corto[paises$nombre_corto == "Kyrgyz Republic"] <- "Kyrgyzstan"
paises$nombre_corto[paises$nombre_corto == "Timor-Leste"] <- "Timor"
paises[nrow(paises)+1, ] <- c("Asia", "South Korea")
paises[nrow(paises)+1, ] <- c("Asia", "North Korea")
paises[nrow(paises)+1, ] <- c("Europe", "Kosovo")
#corrijo paises mal escritos en la base
base$Country.1[base$Country.1 == "UK"] <- "United Kingdom"
base$Country.1[base$Country.1 == "India "] <- "India"
base$Country.1[base$Country.1 == "DR Congo"] <- "Congo"
levels(base$Country.2) <- as.factor(c(levels(base$Country.2), "Congo"))
base$Country.2[base$Country.2 == "DR Congo"] <- "Congo"
base$Country.2[base$Country.2 == "USA"] <- "United States"
base$Country.2[base$Country.2 == "Spain "] <- "Spain"
base$Country.2[base$Country.2 == "Serbia "] <- "Serbia"
base$Country.2[base$Country.2 == "Croatia "] <- "Croatia"
base$Country.2[base$Country.2 == "Northern Ireland"] <- "United Kingdom"
levels(base$Country.2) <- as.factor(c(levels(base$Country.2), "Papua New Guinea"))
base$Country.2[base$Country.2 == "Papua-New-Guinea"] <- "Papua New Guinea"
levels(base$Country.3) <- as.factor(c(levels(base$Country.3), "Congo"))
base$Country.3[base$Country.3 == "DR Congo"] <- "Congo"
base$Country.3[base$Country.3 == "Serbia "] <- "Serbia"
base$Country.3[base$Country.3 == "Venezuela "] <- "Venezuela"
levels(base$Country.4) <- as.factor(c(levels(base$Country.4), "Congo"))
base$Country.4[base$Country.4 == "DR Congo"] <- "Congo"
paises <- unique(paises)
paises <- paises[!(paises$Continent_Name == "Asia" & paises$nombre_corto == "Armenia"),]
paises <- paises[!(paises$Continent_Name == "Europe" & paises$nombre_corto == "Azerbaijan"),]
paises <- paises[!(paises$Continent_Name == "Asia" & paises$nombre_corto == "Cyprus"),]
paises <- paises[!(paises$Continent_Name == "Asia" & paises$nombre_corto == "Georgia"),]
paises <- paises[!(paises$Continent_Name == "Europe" & paises$nombre_corto == "Kazakhstan"),]
paises <- paises[!(paises$Continent_Name == "Asia" & paises$nombre_corto == "Russia"),]
paises <- paises[!(paises$Continent_Name == "Asia" & paises$nombre_corto == "Turkey"),]
#creo cuatro variables continente, 1 por pais
base <- dplyr::left_join(base, paises, by=c("Country.1" = "nombre_corto"), keep= FALSE, suffix=c("1","2"))
base <- dplyr::left_join(base, paises, by=c("Country.2" = "nombre_corto"), keep= FALSE, suffix=c("1","2"))
base <- dplyr::left_join(base, paises, by=c("Country.3" = "nombre_corto"), keep= FALSE, suffix=c("3","4"))
base <- dplyr::left_join(base, paises, by=c("Country.4" = "nombre_corto"), keep= FALSE, suffix=c("3","4"))
nrow(base[base$What.did.you.fact.check. == "Sweden refused to fight the coronavirus.",])
View(as.data.frame(table(base$What.did.you.fact.check.)))
base[base$What.did.you.fact.check.== "
Cristiano Ronaldo will convert his hotels into coronavirus hospitals.",]
base[base$What.did.you.fact.check. == "Cristiano Ronaldo will convert his hotels into coronavirus hospitals.",]
View(base[base$What.did.you.fact.check. == "Cristiano Ronaldo will convert his hotels into coronavirus hospitals.",])
View(base)
bbb
aa
View(bb)
bb$check <- 0
grep("Afg", bb$check[2])
grep("Afg", bb$Var1[2])
bb$check <- grep("An", bb$Var1)
bb$check <- apply(bb$Var1, grep, pattern = "An")
bb$check <- apply(bb$Var1, margin = 2, FUN=grep, pattern="An")
bb$check <- lapply(bb$Var1, margin = 2, FUN=grep, pattern="An")
bb$check <- lapply(bb$Var1, FUN=grep, pattern="An")
bb$check <- lapply(bb$Var1, FUN=grep, pattern="An", invert=TRUE)
bb$check <- lapply(bb$Var1, FUN=grepl, pattern="An")
base$facebook <- 0
base$twitter <- 0
base$whatsapp <- 0
base$instagram <- 0
base$youtube <- 0
base$socialmedia <- 0
base$website <- 0
base$telegram <- 0
base$facebook <- (lapply(bb$Var1, FUN=grepl, pattern="FACEBOOK") | lapply(bb$Var1, FUN=grepl, pattern="FB"))
base$twitter <- lapply(bb$Var1, FUN=grepl, pattern="FACEBOOK")
base$whatsapp <- lapply(bb$Var1, FUN=grepl, pattern="WHATSAPP")
base$instagram <- lapply(bb$Var1, FUN=grepl, pattern="INSTAGRAM")
base$youtube <- lapply(bb$Var1, FUN=grepl, pattern="YOU TUBE")
base$socialmedia <- lapply(bb$Var1, FUN=grepl, pattern="MEDIA")
base$website <- lapply(bb$Var1, FUN=grepl, pattern="SITE")
base$telegram <- lapply(bb$Var1, FUN=grepl, pattern="TELEGRAM")
base$facebook <- (lapply(base$What.did.you.fact.check., FUN=grepl, pattern="FACEBOOK") | lapply(base$What.did.you.fact.check., FUN=grepl, pattern="FB"))
base$twitter <- lapply(base$What.did.you.fact.check., FUN=grepl, pattern="FACEBOOK")
base$whatsapp <- lapply(base$What.did.you.fact.check., FUN=grepl, pattern="WHATSAPP")
base$instagram <- lapply(base$What.did.you.fact.check., FUN=grepl, pattern="INSTAGRAM")
base$youtube <- lapply(base$What.did.you.fact.check., FUN=grepl, pattern="YOU TUBE")
base$socialmedia <- lapply(base$What.did.you.fact.check., FUN=grepl, pattern="MEDIA")
base$website <- lapply(base$What.did.you.fact.check., FUN=grepl, pattern="SITE")
base$telegram <- lapply(base$What.did.you.fact.check., FUN=grepl, pattern="TELEGRAM")
TRUE * FALSE
TRUE + FALSE
base$facebook <- lapply(base$What.did.you.fact.check., FUN=grepl, pattern=c("FACEBOOK", "FB"))
warnings()
base$facebook <- lapply(base$What.did.you.fact.check., FUN=grepl, pattern=("FACEBOOK"|"FB"))
base$facebook <- lapply(base$What.did.you.fact.check., FUN=grepl, pattern=("FACEBOOK|FB"))
base$facebook <- base$facebook <- lapply(base$Who.said.posted.it., FUN=grepl, pattern=("FACEBOOK|FB"))
base$twitter <- lapply(base$Who.said.posted.it., FUN=grepl, pattern="FACEBOOK")
base$whatsapp <- lapply(base$Who.said.posted.it., FUN=grepl, pattern="WHATSAPP")
base$instagram <- lapply(base$Who.said.posted.it., FUN=grepl, pattern="INSTAGRAM")
base$youtube <- lapply(base$Who.said.posted.it., FUN=grepl, pattern="YOU TUBE")
base$socialmedia <- lapply(base$Who.said.posted.it., FUN=grepl, pattern="MEDIA")
base$website <- lapply(base$Who.said.posted.it., FUN=grepl, pattern="SITE")
base$telegram <- lapply(base$Who.said.posted.it., FUN=grepl, pattern="TELEGRAM")
base$Who.said.posted.it. <- toupper(base$Who.said.posted.it.)
base$facebook <- base$facebook <- lapply(base$Who.said.posted.it., FUN=grepl, pattern=("FACEBOOK|FB"))
base$twitter <- lapply(base$Who.said.posted.it., FUN=grepl, pattern="FACEBOOK")
base$whatsapp <- lapply(base$Who.said.posted.it., FUN=grepl, pattern="WHATSAPP")
base$instagram <- lapply(base$Who.said.posted.it., FUN=grepl, pattern="INSTAGRAM")
base$youtube <- lapply(base$Who.said.posted.it., FUN=grepl, pattern="YOU TUBE")
base$socialmedia <- lapply(base$Who.said.posted.it., FUN=grepl, pattern="MEDIA")
base$website <- lapply(base$Who.said.posted.it., FUN=grepl, pattern="SITE")
base$telegram <- lapply(base$Who.said.posted.it., FUN=grepl, pattern="TELEGRAM")
View(as.data.frame(table(base$Who.said.posted.it.)))
table(base$Continent_Name1, base$facebook[base$facebook=="TRUE"])
table(base$Continent_Name1[base$facebook=="TRUE"], base$facebook[base$facebook=="TRUE"])
base %>% count(Continent_Name1, facebook)
long_DF <- base %>% gather(Contiente, Facebook, Twitter, Continent_Name1, facebook, twitter)
long_DF <- base %>% gather(Continent_Name1, facebook, twitter)
View(long_DF)
stocks <- tibble(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
gather(stocks, "stock", "price", -time)
redes <- base[, c(base$Continent_Name1, base$facebook, base$twitter)]
redes <- base[, c("Continent_Name1", "facebook", "twitter")]
head(redes)
gather(redes, "FB", "TW", -Continent_Name1)
redes <- base[, c("Continent_Name1", "facebook", "twitter", "whatsapp", "youtube", "instagram", "socialmedia", "website", "telegram")]
redes_tabla <- gather(redes, "FB", "TW", "WH", "YT", "IN", "SM", "WS", "TG", -Continent_Name1)
redes_tabla <- gather(redes, "red", "usada", -Continent_Name1)
sum(redes_tabla$usada[redes_tabla$red=="facebook"])
count(redes_tabla$usada[redes_tabla$red=="facebook"])
table(redes_tabla$usada[redes_tabla$red=="facebook"])
View(redes_tabla)
str(redes_usada)
str(redes_tabla)
redes_tabla$usada[redes_tabla$usada == "FALSE"] <- 0
redes_tabla$usada[redes_tabla$usada == "TRUE"] <- 1
sum(redes_tabla$usada[redes_tabla$red=="facebook"])
redes_tabla$usada <- data.frame(matrix(unlist(redes_tabla$usada), nrow=length(redes_tabla$usada), byrow=T))
colnames(redes_tabla) <- c("Contiente", "Red", "Usada")
sum(redes_tabla$Usada[redes_tabla$Red=="facebook"])
sum(redes_tabla$Usada[redes_tabla$Red=="facebook"])
redes_tabla$Usada[redes_tabla$Red=="facebook"]
str(redes_tabla)
redes_tabla$usada <- data.frame(vector(unlist(redes_tabla$usada), nrow=length(redes_tabla$usada), byrow=T))
redes <- base[, c("Continent_Name1", "facebook", "twitter", "whatsapp", "youtube", "instagram", "socialmedia", "website", "telegram")]
redes_tabla <- gather(redes, "red", "usada", -Continent_Name1)
redes_tabla$usada[redes_tabla$usada == "FALSE"] <- 0
redes_tabla$usada[redes_tabla$usada == "TRUE"] <- 1
redes_tabla$usada <- data.frame(vector(unlist(redes_tabla$usada), nrow=length(redes_tabla$usada), byrow=T))
redes_tabla$usada <- data.frame(vector(unlist(redes_tabla$usada))
)
redes_tabla$usada <- vector(unlist(redes_tabla$usada))
redes_tabla$usada <- as.vector(unlist(redes_tabla$usada))
str(redes_tabla)
sum(redes_tabla$usada[redes_tabla$red=="facebook"])
sum(base$facebook)
table(base$facebook)
base %>% count(facebook)
total_redes <- aggregate(redes_tabla$usada, by=list(redes_tabla$Continent_Name1, redes_tabla$red), FUN=sum)
View(total_redes)
p <- ggplot(total_redes, aes(x = Group.1, y = Group.2, fill = x)) +
geom_tile() +
scale_fill_gradient(low="yellow", high="red") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplotly(p, tooltip="text")
#librerías
# stringr y stringi: para arreglar caracteres con acento
#lubridate: para corregir problemas de fechas
#ggplot y plotly: para graficar
#dplyr: manejo de fechas y datos
#rgdal, leaflet, htmlwidgets y htmltools: para mapas
paquetes<-c("stringr","stringi", "lubridate", "ggplot2", "dplyr", "plotly", "rgdal", "leaflet", "htmlwidgets", "htmltools", "tidytext", "tidyverse", "wordcloud", "DT","hrbrthemes")
for(i in paquetes){
if(!require(i, character.only = TRUE)){
install.packages(i, dependencies=TRUE)
}
require(i, character.only = TRUE)
}
redes <- base[, c("Continent_Name1", "facebook", "twitter", "whatsapp", "youtube", "instagram", "socialmedia", "website", "telegram")]
redes_tabla <- gather(redes, "red", "usada", -Continent_Name1)
redes_tabla$usada[redes_tabla$usada == "FALSE"] <- 0
redes_tabla$usada[redes_tabla$usada == "TRUE"] <- 1
redes_tabla$usada <- as.vector(unlist(redes_tabla$usada))
head(redes)
head(redes_tabla)
total_redes <- aggregate(redes_tabla$usada, by=list(redes_tabla$Continent_Name1, redes_tabla$red), FUN=sum)
colnames(total_redes) <- c("Continente", "Red", "Freq")
p <- ggplot(total_redes, aes(x = Continente, y = Red, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low="yellow", high="red") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplotly(p, tooltip="text")
View(p)
View(base)
